

Orders-
       1. api/Orders/ordershistory/{id} -retrieve data of all orders ordered by employee(ORDERS HISTORY OF SUPERVISOR)
           -authorization  Incharge, Supervisors, Store managers

       2. api/Orders/allordershistory - retrieve data of all orders ordered by all employees(HISTORY OF ORDERS OF ALL SUPERVISORS )
          -authorization  Incharge, Store managers

        1. api/Orders/Task -retrieve data of order-details ordered by employee and location of material in warehouse(NEW TASK FOR STORE WORKER)
           -authorization   store worker

       2. api/Orders/Tasks/{id} -retrieve data of all order-details delivered by worker.(ALL TASKS DONE BY STORE WORKER)
          -authorization  Incharge, Store managers, Store worker



warehouse

      1. api/warehouse/warehouses - retrieve data of all warehouses
          -authorization  Incharge, Store managers

      2. api/warehouse/sections -retrieve data of all sections in warehouse
           -authorization  Incharge, Store managers

      3. api/warehouse/Floors -retrieve data of all floors avialable in section
           -authorization  Incharge, Store managers

      4. api/warehouse/materialsAvailableOnFloor -retrieve data of all materials avialable on floor
           -authorization  Incharge, Store managers


Orders API :-
1)URL : http:localhost:portnumber/api/Orders/ordershistory/{id}
  Method : employee id
  Return : Json object of all orders ordered by Supervisor
  Body : Null 
  Header : orders details ordered by employee
  Authentication : Employee, store managers
   
2)URL = http:localhost:portnumber/api/Orders/allordershistory
  id : employee Id
  Method : GET
  Return : Json object of all orders
  Body : Null 
  Header : all orders details
  Authentication : Incharge only
 
3)URL = http:localhost:portnumber/api/Orders/Task
  Method : GET
  Return : Json object of new task
  Body : Null 
  Header :  Task details
  Authentication : store workers

3)URL = http:localhost:portnumber/api/Orders/Taskshstory/{id} 
  id : employee Id
  Method : GET
  Return : Json object of Tasks 
  Body : Null 
  Header :  list of Tasks
  Authentication : store workers, store managers

3)URL = http:localhost:portnumber/api/orders/order 
  Method : POST
  Return : True or False
  Body : {
        "employeeId": ,
        "employeeFirstName": "",
        "employeeLastName": "",
        "birthDate": "",
        "hireDate": "",
        "contactNumber": "",
        "email": "",
        "password": "",
        "imgUrl": "",
        "gender": "",
        "departmentId": ,
        "roleId": 
         }
  Header : Add new order
  Authentication : Supervisor only.



Employee API :-
1)URL : http:localhost:portnumber/api/employees/getallemployees
  Method : GET
  Return : Json object of all employees
  Body : Null 
  Header : List of employees
  Authentication : Incharge only
   
2)URL = http:localhost:portnumber/api/employees/GetEmployee/{id} 
  id : employee Id
  Method : GET
  Return : Json object of employee
  Body : Null 
  Header : employee details
  Authentication : Incharge only

3)URL = http:localhost:portnumber/api/employees/Insertemployee 
  Method : POST
  Return : True or False
  Body : {
        "employeeId": ,
        "employeeFirstName": "",
        "employeeLastName": "",
        "birthDate": "",
        "hireDate": "",
        "contactNumber": "",
        "email": "",
        "password": "",
        "imgUrl": "",
        "gender": "",
        "departmentId": ,
        "roleId": 
         }
  Header : Add new employee
  Authentication : Incharge only.


 
4)URL : http:localhost:portnumber/api/employees/UpdateEmployee/{id} 
  id : employee id
  Methode : PUT
  Return : True or False
  Body : {
          "employeeId": ,
          "employeeFirstName": "",
          "employeeLastName": "",
          "birthDate": "",
          "hireDate": "",
          "contactNumber": "",
          "email": "",
          "password": "",
          "imgUrl": "",
          "gender": "",
          "departmentId": ,
          "roleId": 
         }
  Header : Update employee information
  Authentication : Incharge only.

5)URL : http:localhost:portnumber/api/employees/deleteEmployee/{id}
  id : employee Id
  Method : DELETE
  Return : True or False
  Body : Null
  Authentication : Incharge  Only.


   
Material API :-
1)URL : http:localhost:portnumber/api/Materials/getallmaterials
  Method : GET
  Return : Json object of all materials
  Body : Null 
  Header : List of materials
  Authentication : Incharge, Store managers, Supervisors
   
2)URL = http:localhost:portnumber/api/material/getmaterial/{id} 
  id : material Id
  Method : GET
  Return : Json object of material
  Body : Null 
  Header : material details
  Authentication : Incharge, store managers, Supervisors

3)URL = http:localhost:portnumber/api/materials/addmaterial  
  Method : POST
  Return : True or False
  Body : {
        "materialId": 1,
        "materialName": "Needle Bearing",
        "materialType": "Bearing",
        "materialQuantity": 784,
        "materialUnitPrice": 20,
        "materialImgUrl": "./images/SM.jpg"
         }
  Header : Add new material
  Authentication : store managers only.


 
4)URL : http:localhost:portnumber/api/materials/updateMaterial/{id}
  id : material id
  Methode : PUT
  Return : True or False
  Body : {
        "materialId": 1,
        "materialName": "Needle Bearing",
        "materialType": "Bearing",
        "materialQuantity": 784,
        "materialUnitPrice": 20,
        "materialImgUrl": "./images/SM.jpg" 
         }
  Header : Update material information
  Authentication : store managers only.

5)URL : http:localhost:portnumber/api/materials/deletematerial/{id}
  id : material Id
  Method : DELETE
  Return : True or False
  Body : Null
  Authentication : store managers Only.
 





